pipeline {
    agent {
        docker {
            image 'node:latest'
            args '-p 5000:5000'
        }
    }
    environment {
        PORT=5000
    } 
    stages {
        stage('Install') {
            steps {
                sh 'npm install'
            }
        }
        stage('Schema swapi') {
            steps {
                sh 'npm run get-schema'
            }
        }
        stage('Linter') {
            steps {
                sh 'npm run linter'
                sh 'npm run linter-query'
            }
        }
        stage('Test') {
            steps {
                script {
                    try{
                        sh 'npm test'
                    }catch(Exception e){
                        def skipTestFailure = input(message: 'Test en échec, continuer ?', 
                            parameters: [booleanParam(defaultValue: true, 
                            description: 'continuer',name: 'oui ?')])
                        if(skipTestFailure){
                            currentBuild.result = 'UNSTABLE'
                        } else{
                            currentBuild.result = 'FAILURE'
                            error('Test en échec')
                        }
                    }
                }
            }
        }
        stage('Build client') {
            steps {
                sh 'npm run build-prod'
            }
        }
        stage('Build server') {
            steps {
                sh 'npm run compile'
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
                input message: 'Finished using the web site? (Click "Proceed" to continue)'
                sh './jenkins/scripts/kill.sh'
            }
        }
        stage('Clean') {
            steps {
                sh './jenkins/scripts/clean.sh'
            }
        }
    }
}
